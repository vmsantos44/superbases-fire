rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    function isUserEmployee(employeeId) {
      return get(/databases/$(database)/documents/employees/$(employeeId)).data.email == request.auth.token.email;
    }
    
    // Employee collection rules
    match /employees/{employeeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isAdmin();
      allow update: if isAuthenticated() && (isAdmin() || isUserEmployee(employeeId));
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Employee compensation rules
    match /employees/{employeeId}/compensation/{docId} {
      allow read: if isAuthenticated() && (isAdmin() || isUserEmployee(employeeId));
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // Time entries rules
    match /time_entries/{entryId} {
      allow read: if isAuthenticated() && (
        resource.data.employee_id == request.auth.uid || 
        isAdmin()
      );
      allow create: if isAuthenticated() && (
        request.resource.data.employee_id == request.auth.uid || 
        isAdmin()
      );
      allow update, delete: if isAuthenticated() && (
        resource.data.employee_id == request.auth.uid || 
        isAdmin()
      );
    }
  }
}